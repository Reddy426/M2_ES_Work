Archive member included because of file (symbol)

c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr4\libgcc.a(_exit.o)
                              c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr4/crtm8.o (exit)
c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr4\libgcc.a(_copy_data.o)
                              MAIN_M.o (__do_copy_data)
c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr4\libgcc.a(_clear_bss.o)
                              MAIN_M.o (__do_clear_bss)
c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr4\libc.a(eerd_block_atmega8.o)
                              MAIN_M.o (__eerd_block_m8)
c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr4\libc.a(eerd_byte_atmega8.o)
                              MAIN_M.o (__eerd_byte_m8)
c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr4\libc.a(eeupd_block_atmega8.o)
                              MAIN_M.o (__eeupd_block_m8)
c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr4\libc.a(eeupd_byte_atmega8.o)
                              MAIN_M.o (__eeupd_byte_m8)

Allocating common symbols
Common symbol       size              file

mm                  0x2               MAIN_M.o
type                0x14              MAIN_M.o
nos                 0x1               MAIN_M.o
SS                  0x2               MAIN_M.o
mode                0x14              MAIN_M.o
HH                  0x2               MAIN_M.o
dd                  0x2               MAIN_M.o
yr                  0x2               MAIN_M.o
MM                  0x2               MAIN_M.o
t_off               0x50              MAIN_M.o
t_onn               0x50              MAIN_M.o
rstat               0x1               MAIN_M.o
ret                 0x1               MAIN_M.o
name                0xc8              MAIN_M.o

Memory Configuration

Name             Origin             Length             Attributes
text             0x00000000         0x00002000         xr
data             0x00800060         0x0000ffa0         rw !x
eeprom           0x00810000         0x00010000         rw !x
fuse             0x00820000         0x00000400         rw !x
lock             0x00830000         0x00000400         rw !x
signature        0x00840000         0x00000400         rw !x
*default*        0x00000000         0xffffffff

Linker script and memory map

LOAD c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr4/crtm8.o
LOAD MAIN_M.o
LOAD c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr4\libgcc.a
LOAD c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr4\libc.a
LOAD c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr4\libgcc.a

.hash
 *(.hash)

.dynsym
 *(.dynsym)

.dynstr
 *(.dynstr)

.gnu.version
 *(.gnu.version)

.gnu.version_d
 *(.gnu.version_d)

.gnu.version_r
 *(.gnu.version_r)

.rel.init
 *(.rel.init)

.rela.init
 *(.rela.init)

.rel.text
 *(.rel.text)
 *(.rel.text.*)
 *(.rel.gnu.linkonce.t*)

.rela.text
 *(.rela.text)
 *(.rela.text.*)
 *(.rela.gnu.linkonce.t*)

.rel.fini
 *(.rel.fini)

.rela.fini
 *(.rela.fini)

.rel.rodata
 *(.rel.rodata)
 *(.rel.rodata.*)
 *(.rel.gnu.linkonce.r*)

.rela.rodata
 *(.rela.rodata)
 *(.rela.rodata.*)
 *(.rela.gnu.linkonce.r*)

.rel.data
 *(.rel.data)
 *(.rel.data.*)
 *(.rel.gnu.linkonce.d*)

.rela.data
 *(.rela.data)
 *(.rela.data.*)
 *(.rela.gnu.linkonce.d*)

.rel.ctors
 *(.rel.ctors)

.rela.ctors
 *(.rela.ctors)

.rel.dtors
 *(.rel.dtors)

.rela.dtors
 *(.rela.dtors)

.rel.got
 *(.rel.got)

.rela.got
 *(.rela.got)

.rel.bss
 *(.rel.bss)

.rela.bss
 *(.rela.bss)

.rel.plt
 *(.rel.plt)

.rela.plt
 *(.rela.plt)

.text           0x00000000      0xf98
 *(.vectors)
 .vectors       0x00000000       0x26 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr4/crtm8.o
                0x00000000                __vectors
                0x00000000                __vector_default
 *(.vectors)
 *(.progmem.gcc*)
 *(.progmem*)
                0x00000026                . = ALIGN (0x2)
                0x00000026                __trampolines_start = .
 *(.trampolines)
 .trampolines   0x00000026        0x0 linker stubs
 *(.trampolines*)
                0x00000026                __trampolines_end = .
 *(.jumptables)
 *(.jumptables*)
 *(.lowtext)
 *(.lowtext*)
                0x00000026                __ctors_start = .
 *(.ctors)
                0x00000026                __ctors_end = .
                0x00000026                __dtors_start = .
 *(.dtors)
                0x00000026                __dtors_end = .
 SORT(*)(.ctors)
 SORT(*)(.dtors)
 *(.init0)
 .init0         0x00000026        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr4/crtm8.o
                0x00000026                __init
 *(.init0)
 *(.init1)
 *(.init1)
 *(.init2)
 .init2         0x00000026        0xc c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr4/crtm8.o
 *(.init2)
 *(.init3)
 *(.init3)
 *(.init4)
 .init4         0x00000032       0x16 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr4\libgcc.a(_copy_data.o)
                0x00000032                __do_copy_data
 .init4         0x00000048       0x10 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr4\libgcc.a(_clear_bss.o)
                0x00000048                __do_clear_bss
 *(.init4)
 *(.init5)
 *(.init5)
 *(.init6)
 *(.init6)
 *(.init7)
 *(.init7)
 *(.init8)
 *(.init8)
 *(.init9)
 .init9         0x00000058        0x4 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr4/crtm8.o
 *(.init9)
 *(.text)
 .text          0x0000005c        0x2 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr4/crtm8.o
                0x0000005c                __vector_1
                0x0000005c                __vector_12
                0x0000005c                __bad_interrupt
                0x0000005c                __vector_6
                0x0000005c                __vector_3
                0x0000005c                __vector_13
                0x0000005c                __vector_17
                0x0000005c                __vector_7
                0x0000005c                __vector_5
                0x0000005c                __vector_4
                0x0000005c                __vector_9
                0x0000005c                __vector_2
                0x0000005c                __vector_15
                0x0000005c                __vector_8
                0x0000005c                __vector_14
                0x0000005c                __vector_10
                0x0000005c                __vector_16
                0x0000005c                __vector_18
 .text          0x0000005e      0xec6 MAIN_M.o
                0x00000dd6                varupdt
                0x00000858                rom_update
                0x00000380                alm_mode
                0x0000011c                rtc_write
                0x000003a4                conn
                0x00000de4                readmodname
                0x00000ec8                frupdt
                0x000000a4                UART_txsl
                0x0000007e                UART_txs
                0x000000e6                read_i2c
                0x00000580                time_act
                0x00000546                time_tx
                0x00000e6e                __vector_11
                0x000001b8                get_time_date
                0x000003fe                coff
                0x00000810                en_intr
                0x00000076                UART_rx
                0x00000c94                readcmd
                0x000002ea                devswit
                0x00000322                shut_down
                0x00000824                main
                0x000007dc                em_swit
                0x00000ed6                firstrun
                0x00000900                updt_remote
                0x00000c5e                new_reg
                0x00000256                set_time_date
                0x00000162                rtc_read
                0x000008ac                vars_update
                0x000000f4                write_i2c
                0x0000005e                UART_init
                0x00000102                start
                0x000000da                init_i2c
                0x000006ae                time_deact
                0x0000010e                stop
                0x00000458                time_set
                0x0000006e                UART_tx
                0x0000093c                del_reg
                0x0000034e                device_on
 .text          0x00000f24        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr4\libgcc.a(_exit.o)
 .text          0x00000f24        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr4\libgcc.a(_copy_data.o)
 .text          0x00000f24        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr4\libgcc.a(_clear_bss.o)
 .text          0x00000f24        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr4\libc.a(eerd_block_atmega8.o)
 .text          0x00000f24        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr4\libc.a(eerd_byte_atmega8.o)
 .text          0x00000f24        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr4\libc.a(eeupd_block_atmega8.o)
 .text          0x00000f24        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr4\libc.a(eeupd_byte_atmega8.o)
                0x00000f24                . = ALIGN (0x2)
 *(.text.*)
 .text.libgcc   0x00000f24        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr4\libgcc.a(_exit.o)
 .text.libgcc   0x00000f24        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr4\libgcc.a(_copy_data.o)
 .text.libgcc   0x00000f24        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr4\libgcc.a(_clear_bss.o)
 .text.avr-libc
                0x00000f24       0x20 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr4\libc.a(eerd_block_atmega8.o)
                0x00000f28                __eerd_blraw_m8
                0x00000f24                __eerd_block_m8
 .text.avr-libc
                0x00000f44       0x10 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr4\libc.a(eerd_byte_atmega8.o)
                0x00000f44                __eerd_byte_m8
 .text.avr-libc
                0x00000f54       0x1e c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr4\libc.a(eeupd_block_atmega8.o)
                0x00000f54                __eeupd_block_m8
 .text.avr-libc
                0x00000f72       0x22 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr4\libc.a(eeupd_byte_atmega8.o)
                0x00000f72                __eeupd_byte_m8
                0x00000f74                __eeupd_r18_m8
                0x00000f94                . = ALIGN (0x2)
 *(.fini9)
 .fini9         0x00000f94        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr4\libgcc.a(_exit.o)
                0x00000f94                exit
                0x00000f94                _exit
 *(.fini9)
 *(.fini8)
 *(.fini8)
 *(.fini7)
 *(.fini7)
 *(.fini6)
 *(.fini6)
 *(.fini5)
 *(.fini5)
 *(.fini4)
 *(.fini4)
 *(.fini3)
 *(.fini3)
 *(.fini2)
 *(.fini2)
 *(.fini1)
 *(.fini1)
 *(.fini0)
 .fini0         0x00000f94        0x4 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr4\libgcc.a(_exit.o)
 *(.fini0)
                0x00000f98                _etext = .

.data           0x00800060       0x68 load address 0x00000f98
                0x00800060                PROVIDE (__data_start, .)
 *(.data)
 .data          0x00800060        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr4/crtm8.o
 .data          0x00800060       0x67 MAIN_M.o
 .data          0x008000c7        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr4\libgcc.a(_exit.o)
 .data          0x008000c7        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr4\libgcc.a(_copy_data.o)
 .data          0x008000c7        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr4\libgcc.a(_clear_bss.o)
 .data          0x008000c7        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr4\libc.a(eerd_block_atmega8.o)
 .data          0x008000c7        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr4\libc.a(eerd_byte_atmega8.o)
 .data          0x008000c7        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr4\libc.a(eeupd_block_atmega8.o)
 .data          0x008000c7        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr4\libc.a(eeupd_byte_atmega8.o)
 *(.data*)
 *(.rodata)
 *(.rodata*)
 *(.gnu.linkonce.d*)
                0x008000c8                . = ALIGN (0x2)
 *fill*         0x008000c7        0x1 00
                0x008000c8                _edata = .
                0x008000c8                PROVIDE (__data_end, .)

.bss            0x008000c8      0x1a6
                0x008000c8                PROVIDE (__bss_start, .)
 *(.bss)
 .bss           0x008000c8        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr4/crtm8.o
 .bss           0x008000c8        0x7 MAIN_M.o
                0x008000ca                month
                0x008000ce                second
                0x008000cd                minute
                0x008000c8                emm
                0x008000cc                hour
                0x008000c9                year
                0x008000cb                day
 .bss           0x008000cf        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr4\libgcc.a(_exit.o)
 .bss           0x008000cf        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr4\libgcc.a(_copy_data.o)
 .bss           0x008000cf        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr4\libgcc.a(_clear_bss.o)
 .bss           0x008000cf        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr4\libc.a(eerd_block_atmega8.o)
 .bss           0x008000cf        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr4\libc.a(eerd_byte_atmega8.o)
 .bss           0x008000cf        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr4\libc.a(eeupd_block_atmega8.o)
 .bss           0x008000cf        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr4\libc.a(eeupd_byte_atmega8.o)
 *(.bss*)
 *(COMMON)
 COMMON         0x008000cf      0x19f MAIN_M.o
                0x008000cf                mm
                0x008000d1                type
                0x008000e5                nos
                0x008000e6                SS
                0x008000e8                mode
                0x008000fc                HH
                0x008000fe                dd
                0x00800100                yr
                0x00800102                MM
                0x00800104                t_off
                0x00800154                t_onn
                0x008001a4                rstat
                0x008001a5                ret
                0x008001a6                name
                0x0080026e                PROVIDE (__bss_end, .)
                0x00000f98                __data_load_start = LOADADDR (.data)
                0x00001000                __data_load_end = (__data_load_start + SIZEOF (.data))

.noinit         0x0080026e        0x0
                0x0080026e                PROVIDE (__noinit_start, .)
 *(.noinit*)
                0x0080026e                PROVIDE (__noinit_end, .)
                0x0080026e                _end = .
                0x0080026e                PROVIDE (__heap_start, .)

.eeprom         0x00810000      0x192
 *(.eeprom*)
 .eeprom        0x00810000      0x192 MAIN_M.o
                0x00810191                fr
                0x008100dc                modmo
                0x00810000                modnm
                0x00810140                modtf
                0x008100f0                modtn
                0x008100c8                modty
                0x00810190                modnos
                0x00810192                __eeprom_end = .

.fuse
 *(.fuse)
 *(.lfuse)
 *(.hfuse)
 *(.efuse)

.lock
 *(.lock*)

.signature
 *(.signature*)

.stab
 *(.stab)

.stabstr
 *(.stabstr)

.stab.excl
 *(.stab.excl)

.stab.exclstr
 *(.stab.exclstr)

.stab.index
 *(.stab.index)

.stab.indexstr
 *(.stab.indexstr)

.comment
 *(.comment)

.debug
 *(.debug)

.line
 *(.line)

.debug_srcinfo
 *(.debug_srcinfo)

.debug_sfnames
 *(.debug_sfnames)

.debug_aranges  0x00000000       0x20
 *(.debug_aranges)
 .debug_aranges
                0x00000000       0x20 MAIN_M.o

.debug_pubnames
                0x00000000      0x2fa
 *(.debug_pubnames)
 .debug_pubnames
                0x00000000      0x2fa MAIN_M.o

.debug_info     0x00000000     0x1292
 *(.debug_info)
 .debug_info    0x00000000     0x1292 MAIN_M.o
 *(.gnu.linkonce.wi.*)

.debug_abbrev   0x00000000      0x319
 *(.debug_abbrev)
 .debug_abbrev  0x00000000      0x319 MAIN_M.o

.debug_line     0x00000000     0x143f
 *(.debug_line)
 .debug_line    0x00000000     0x143f MAIN_M.o

.debug_frame    0x00000000      0x270
 *(.debug_frame)
 .debug_frame   0x00000000      0x270 MAIN_M.o

.debug_str      0x00000000      0x2b9
 *(.debug_str)
 .debug_str     0x00000000      0x2b9 MAIN_M.o
                                0x2fc (size before relaxing)

.debug_loc      0x00000000      0x49f
 *(.debug_loc)
 .debug_loc     0x00000000      0x49f MAIN_M.o

.debug_macinfo
 *(.debug_macinfo)
OUTPUT(MAIN_M.elf elf32-avr)
LOAD linker stubs

.debug_ranges   0x00000000       0xc0
 .debug_ranges  0x00000000       0xc0 MAIN_M.o
